{"version":3,"file":"static/js/855.5f84fe69.chunk.js","mappings":"iNACA,EAAuB,mBAAvB,EAAsD,wBAAtD,EAA4F,0BAA5F,EAA4H,kB,UCD/GA,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,EACxBC,EAAiB,SAAAF,GAAK,OAAIA,EAAMG,MAAV,EACtBC,EAAkB,SAAAJ,GAAK,OAAIA,EAAMK,OAAV,E,mBCKrB,SAASC,IACtB,IAAML,GAAWM,EAAAA,EAAAA,IAAYR,GAEvBS,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,OAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,QACHJ,EAASI,GACT,MACF,QACE,OAEL,EAkBKC,EAAY,WAChBP,EAAQ,IACRE,EAAS,GACV,EAED,OACE,kBAAMM,SAZa,SAAAJ,GACnBA,EAAMK,iBAXe,SAAC,GAAqB,IAAnBV,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MACxBS,EAAiBX,EAAKY,cAExBtB,EAASuB,MAAK,qBAAGb,KAAgBY,gBAAkBD,CAArC,IAChBG,MAAM,GAAD,OAAId,EAAJ,4BAELH,GAASkB,EAAAA,EAAAA,IAAY,CAAEf,KAAAA,EAAME,MAAAA,IAEhC,CAICc,CAAe,CAAEhB,KAAAA,EAAME,MAAAA,IACvBM,GACD,EAQ+BS,UAAWC,EAAzC,WACE,mBAAOC,QAAQ,OAAf,kBAEE,kBACEF,UAAWC,EACXE,GAAG,OACHC,SAAUjB,EACVkB,KAAK,OACLtB,KAAK,OACLO,MAAOP,EACPuB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAON,QAAQ,QAAf,oBAEE,kBACEF,UAAWC,EACXE,GAAG,QACHC,SAAUjB,EACVkB,KAAK,MACLtB,KAAK,QACLO,MAAOL,EACPqB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQR,UAAWC,EAAOI,KAAK,SAA/B,2BAKL,C,cCnFD,EAAuB,uBAAvB,EAAqD,uBAArD,EAAmF,uBAAnF,EAAsH,4BAAtH,EAAwJ,sBCYzI,SAASI,IACtB,IAAM7B,GAAWC,EAAAA,EAAAA,OAEjB6B,EAAAA,EAAAA,YAAU,WACR9B,GAAS+B,EAAAA,EAAAA,MACV,GAAE,CAAC/B,IAEJ,IAAMP,GAAWM,EAAAA,EAAAA,IAAYR,GACvBI,GAASI,EAAAA,EAAAA,IAAYL,GACrBG,GAAUE,EAAAA,EAAAA,IAAYH,GACtBoC,EAAOvC,EAASE,QAAO,qBAAGQ,KACzB8B,oBAAoBC,SAASvC,EAAOsC,oBADd,IAIvBE,EAAWH,EAAKI,KAAI,YAA0B,IAAvBb,EAAsB,EAAtBA,GAAIpB,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MACrC,OACE,gBAAae,UAAWC,EAAxB,WACE,cAAGD,UAAWC,EAAd,SAAuBlB,KACvB,cAAGiB,UAAWC,EAAd,SAAuBhB,KACvB,mBACEe,UAAWC,EACXI,KAAK,SACLY,QAAS,kBAAMrC,GAASsC,EAAAA,EAAAA,IAAef,GAA9B,EAHX,sBAHOA,EAYZ,IAED,OACE,gBAAIH,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,6BAA6CW,EAAKO,UAChD1C,GAAqB,SAAC2C,EAAA,EAAD,IAAXL,IAGjB,C,cChDD,EAAyB,uBAAzB,EAA8D,4BAA9D,EAAwG,4BCGzF,SAASM,IACtB,IAAM/B,GAAQX,EAAAA,EAAAA,KAAY,SAAAP,GAAK,OAAIA,EAAMG,MAAV,IAEzBK,GAAWC,EAAAA,EAAAA,MACjB,OACE,gBAAKmB,UAAWC,EAAhB,UACE,mBAAOC,QAAQ,SAASF,UAAWC,EAAnC,mCAEE,kBACED,UAAWC,EACXG,SAAU,SAAAhB,GAAK,OAAIR,GAAS0C,EAAAA,EAAAA,GAAUlC,EAAMmC,cAAcjC,OAA3C,EACfe,KAAK,OACLtB,KAAK,SACLoB,GAAG,SACHb,MAAOA,EACPkB,UAAQ,QAKjB,CCvBc,SAASgB,IACtB,OACE,iCACE,SAAC9C,EAAD,KACA,SAAC2C,EAAD,KACA,SAACZ,EAAD,MAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","redux/contacts/contacts-selectors.js","components/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"inputName\":\"Form_inputName__+Pfkf\",\"inputNumber\":\"Form_inputNumber__+CNoV\",\"btn\":\"Form_btn__0ebGo\"};","export const contactsSelector = state => state.contacts;\nexport const filterSelector = state => state.filter;\nexport const loadingSelector = state => state.loading;\n","import { useState } from 'react';\nimport s from './Form.module.css';\n// import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelector } from 'redux/contacts/contacts-selectors';\nimport { addContacts } from 'redux/contacts/contacts-operations';\n\nexport default function Form() {\n  const contacts = useSelector(contactsSelector);\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const formSubmitData = ({ name, phone }) => {\n    const newContactName = name.toLowerCase();\n\n    if (contacts.some(({ name }) => name.toLowerCase() === newContactName)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContacts({ name, phone }));\n    }\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    formSubmitData({ name, phone });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form onSubmit={onFormSubmit} className={s.form}>\n      <label htmlFor=\"name\">\n        Name\n        <input\n          className={s.inputName}\n          id=\"name\"\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor=\"phone\">\n        Number\n        <input\n          className={s.inputNumber}\n          id=\"phone\"\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// Form.propTypes = {\n//   formSubmitData: PropTypes.func.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Contacts_list__R3QeP\",\"item\":\"Contacts_item__WTDnh\",\"text\":\"Contacts_text__Cijp1\",\"listTitle\":\"Contacts_listTitle__swW8I\",\"btn\":\"Contacts_btn__rNftF\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/contacts-operations';\nimport { loadingSelector } from 'redux/contacts/contacts-selectors';\nimport { Loader } from '../Loader/Loader';\nimport s from './Contacts.module.css';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\n\nimport {\n  contactsSelector,\n  filterSelector,\n} from 'redux/contacts/contacts-selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(contactsSelector);\n  const filter = useSelector(filterSelector);\n  const loading = useSelector(loadingSelector);\n  const data = contacts.filter(({ name }) =>\n    name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n  );\n\n  const elements = data.map(({ id, name, phone }) => {\n    return (\n      <li key={id} className={s.item}>\n        <p className={s.text}>{name}</p>\n        <p className={s.text}>{phone}</p>\n        <button\n          className={s.btn}\n          type=\"submit\"\n          onClick={() => dispatch(deleteContacts(id))}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <ul className={s.list}>\n      <h3 className={s.listTitle}>Total contacts: {data.length}</h3>\n      {!loading ? elements : <Loader />}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"labelFilter\":\"Filter_labelFilter__7SBy1\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const value = useSelector(state => state.filter);\n\n  const dispatch = useDispatch();\n  return (\n    <div className={s.filter}>\n      <label htmlFor=\"filter\" className={s.labelFilter}>\n        Find contacts by name\n        <input\n          className={s.filterInput}\n          onChange={event => dispatch(setFilter(event.currentTarget.value))}\n          type=\"name\"\n          name=\"filter\"\n          id=\"filter\"\n          value={value}\n          required\n        />\n      </label>\n    </div>\n  );\n}\n","import { Form, Contacts, Filter } from 'components';\nexport default function ContactsPage() {\n  return (\n    <>\n      <Form />\n      <Filter />\n      <Contacts />\n    </>\n  );\n}\n"],"names":["contactsSelector","state","contacts","filterSelector","filter","loadingSelector","loading","Form","useSelector","dispatch","useDispatch","useState","name","setName","phone","setPhone","handleInputChange","event","target","value","resetForm","onSubmit","preventDefault","newContactName","toLowerCase","some","alert","addContacts","formSubmitData","className","s","htmlFor","id","onChange","type","pattern","title","required","Contacts","useEffect","fetchContacts","data","toLocaleLowerCase","includes","elements","map","onClick","deleteContacts","length","Loader","Filter","setFilter","currentTarget","ContactsPage"],"sourceRoot":""}